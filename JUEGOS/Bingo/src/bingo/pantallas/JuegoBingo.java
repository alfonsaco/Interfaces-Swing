/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo.pantallas;

import java.awt.Color;
import java.awt.Label;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author Alfonso
 */
public class JuegoBingo extends javax.swing.JFrame {

    private ArrayList<Integer> repetidos;
    private int[][] casillas;
    
    // Variable para controlar el tipo de Victoria
    private int tipo;
    private int victoriaBingo;
    // ArrayList para verificar qué casos han sido ya verificados
    private ArrayList<Boolean> listaDeCasos; 
    /*
        FILAS 1
        COLUMNAS 2
        DIAGONAL 3
        BINGO 4
        
    */
    /**
     * Creates new form JuegoBingo
     */
    public JuegoBingo() {
        initComponents();
        
        // Estilos del JFrame
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/bingo/images/logo.png")).getImage());
        
        // Inicializar el arraylist de números
        repetidos=new ArrayList<>();
        listaDeCasos=new ArrayList<>();
        for (int i = 0; i < 12; i++) {
            listaDeCasos.add(true);
        }
        victoriaBingo=0;
        
        // Agrego los labels
        casillas=new int[5][5];        
                
        añadirCeldas();                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Boleto = new javax.swing.JPanel();
        GridLayoutBoleto = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BotonTirar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelNumeroGenerado = new javax.swing.JLabel();
        BotonReset = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Boleto.setBackground(new java.awt.Color(44, 100, 212));
        Boleto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        GridLayoutBoleto.setBackground(new java.awt.Color(255, 255, 255));
        GridLayoutBoleto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        GridLayoutBoleto.setLayout(new java.awt.GridLayout(5, 5));

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BINGO");

        javax.swing.GroupLayout BoletoLayout = new javax.swing.GroupLayout(Boleto);
        Boleto.setLayout(BoletoLayout);
        BoletoLayout.setHorizontalGroup(
            BoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BoletoLayout.createSequentialGroup()
                .addGroup(BoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BoletoLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BoletoLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(GridLayoutBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        BoletoLayout.setVerticalGroup(
            BoletoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BoletoLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GridLayoutBoleto, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jPanel1.add(Boleto, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, -1, -1));

        BotonTirar.setBackground(new java.awt.Color(44, 100, 212));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("TIRAR");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout BotonTirarLayout = new javax.swing.GroupLayout(BotonTirar);
        BotonTirar.setLayout(BotonTirarLayout);
        BotonTirarLayout.setHorizontalGroup(
            BotonTirarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotonTirarLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        BotonTirarLayout.setVerticalGroup(
            BotonTirarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        );

        jPanel1.add(BotonTirar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jLabelNumeroGenerado.setBackground(new java.awt.Color(255, 255, 255));
        jLabelNumeroGenerado.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabelNumeroGenerado.setForeground(new java.awt.Color(18, 18, 18));
        jLabelNumeroGenerado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNumeroGenerado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabelNumeroGenerado.setOpaque(true);
        jPanel1.add(jLabelNumeroGenerado, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 80, 80));

        BotonReset.setBackground(new java.awt.Color(44, 100, 212));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("RESET");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout BotonResetLayout = new javax.swing.GroupLayout(BotonReset);
        BotonReset.setLayout(BotonResetLayout);
        BotonResetLayout.setHorizontalGroup(
            BotonResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        );
        BotonResetLayout.setVerticalGroup(
            BotonResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel1.add(BotonReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 286, 193, 60));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bingo/images/fondoBlanco2.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Al hacer click en el botón, se generan números aleatorios
    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        int random=(int)(1+Math.random()*75);        
        
        // Evitar que se generen números repetidos
        while(repetidos.contains(random)) {
            random=(int)(1+Math.random()*75);            
        }
        repetidos.add(random);
        jLabelNumeroGenerado.setText(String.valueOf(random));
        
        // Buscamos que el número esté en el boleto
        buscarNumero(random);
        leerArray(casillas);
               
        // Verificamos si ha ganado o no
        if(verificarVictoria()) {
            if(tipo == 1) {
                JOptionPane.showMessageDialog(this, "FILA COMPLETA");
            } else if(tipo == 2) {
                JOptionPane.showMessageDialog(this, "COLUMNA COMPLETA");
            } else if(tipo == 3) {
                JOptionPane.showMessageDialog(this, "DIAGONAL COMPLETA");
            } else {
                // Diálogo de victoria
                Victoria v = new Victoria(this, true);
                v.setVisible(true);
                
                limpiarTablero();
                añadirCeldas();
                jLabelNumeroGenerado.setText("");
            }             
            
        }       
    }//GEN-LAST:event_jLabel2MouseClicked

    // RESETEAR EL JUEGO
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        limpiarTablero();
        añadirCeldas();  
        jLabelNumeroGenerado.setText("");
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        BotonTirar.setBackground(new Color(27, 68, 150));
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
        BotonTirar.setBackground(new Color(44,100,212));
    }//GEN-LAST:event_jLabel2MouseExited

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        BotonReset.setBackground(new Color(27, 68, 150));
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        BotonReset.setBackground(new Color(44,100,212));
    }//GEN-LAST:event_jLabel3MouseExited

    private void leerArray(int[][] casillas) {
        for(int i=0; i<5; i++)  {
            for(int j=0; j<5; j++) {
                System.out.print(casillas[i][j]+" ");
            }
            System.out.println();
        }
          System.out.println();
    }
    
   // Llenar el tablero con los números aleatorios (sin repetidos)
    private void añadirCeldas() {        
        limpiarTablero();
        
        int inicio = 1;
        int numero = 0;

        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                // Asignar un número único a cada casilla
                numero=(int) (Math.random() * 15) + inicio;

                // Evitar que el número se repita en el tablero
                while(numeroRepetido(numero)) {
                    numero=(int) (Math.random() * 15) + inicio;
                }
                casillas[i][j]=numero;

                // Crear el label correspondiente
                JLabel label=new JLabel();
                label.setText(String.valueOf(numero));
                label.setHorizontalAlignment(JLabel.CENTER);
                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 16));
                label.setOpaque(true);

                // Fondo diferente para casillas pares e impares
                if ((i + j) % 2 == 0) {
                    label.setBackground(new Color(102,153,255));
                    label.setForeground(Color.WHITE);
                } else {
                    label.setBackground(Color.WHITE);
                    label.setForeground(Color.BLACK);
                }

                // Agregar la casilla al grid
                GridLayoutBoleto.add(label);
            }
            inicio += 15;
        }
    }

    // Función para evitar números repetidos en el tablero
    private boolean numeroRepetido(int num) {
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (casillas[i][j] == num) {
                    return true;
                }
            }
        }
        return false;
    }

    public boolean verificarVictoria() {        
        victoriaBingo=0;
        for(int i=0; i<5; i++) {
            for(int j=0; j<5; j++) {
                if(casillas[i][j] == 0) {
                    victoriaBingo++;
                }
            }
        }
        if(victoriaBingo == 25) {
            tipo=4;
            return true;
        }
        
        // VERIFICAMOS LAS FILAS
        if(casillas[0][0]==0 && casillas[0][1]==0 && casillas[0][2]==0 && casillas[0][3]==0 && casillas[0][4]==0 && listaDeCasos.get(0) != false) {
            tipo=1;
            listaDeCasos.set(0, false);
            return true;
        } else if(casillas[1][0]==0 && casillas[1][1]==0 && casillas[1][2]==0 && casillas[1][3]==0 && casillas[1][4]==0 && listaDeCasos.get(1) != false) {
            tipo=1;
            listaDeCasos.set(1, false);
            return true;
        } else if(casillas[2][0]==0 && casillas[2][1]==0 && casillas[2][2]==0 && casillas[2][3]==0 && casillas[2][4]==0 && listaDeCasos.get(2) != false) {
            tipo=1;
            listaDeCasos.set(2, false);
            return true;
        } else if(casillas[3][0]==0 && casillas[3][1]==0 && casillas[3][2]==0 && casillas[3][3]==0 && casillas[3][4]==0 && listaDeCasos.get(3) != false) {
            tipo=1;
            listaDeCasos.set(3, false);
            return true;
        } else if(casillas[4][0]==0 && casillas[4][1]==0 && casillas[4][2]==0 && casillas[4][3]==0 && casillas[4][4]==0 && listaDeCasos.get(4) != false) {
            tipo=1;
            listaDeCasos.set(4, false);
            return true;
        // VERIFICAMOS LAS COLUMNAS
        } else if(casillas[0][0]==0 && casillas[1][0]==0 && casillas[2][0]==0 && casillas[3][0]==0 && casillas[4][0]==0 && listaDeCasos.get(5) != false) {
            tipo=2;
            listaDeCasos.set(5, false);
            return true;
        } else if(casillas[0][1]==0 && casillas[1][1]==0 && casillas[2][1]==0 && casillas[3][1]==0 && casillas[4][1]==0 && listaDeCasos.get(6) != false) {
            tipo=2;
            listaDeCasos.set(6, false);
            return true;
        } else if(casillas[0][2]==0 && casillas[1][2]==0 && casillas[2][2]==0 && casillas[3][2]==0 && casillas[4][2]==0 && listaDeCasos.get(7) != false) {
            tipo=2;
            listaDeCasos.set(7, false);
            return true;
        } else if(casillas[0][3]==0 && casillas[1][3]==0 && casillas[2][3]==0 && casillas[3][3]==0 && casillas[4][3]==0 && listaDeCasos.get(8) != false) {
            tipo=2;
            listaDeCasos.set(8, false);
            return true;
        } else if(casillas[0][4]==0 && casillas[1][4]==0 && casillas[2][4]==0 && casillas[3][4]==0 && casillas[4][4]==0 && listaDeCasos.get(9) != false) {
            tipo=2;
            listaDeCasos.set(9, false);
            return true;
        // VERIFICAMOS LAS DIAGONALES
        } else if(casillas[0][0]==0 && casillas[1][1]==0 && casillas[2][2]==0 && casillas[3][3]==0 && casillas[4][4]==0 && listaDeCasos.get(10) != false) {
            tipo=3;
            listaDeCasos.set(10, false);
            return true;
        }  else if(casillas[4][0]==0 && casillas[3][1]==0 && casillas[2][2]==0 && casillas[1][3]==0 && casillas[0][4]==0 && listaDeCasos.get(11) != false) {
            tipo=3;
            listaDeCasos.set(11, false);
            return true;
        }
        
        return false;
    }

    // Buscar el número en el tablero y marcar la casilla correspondiente
    private void buscarNumero(int numero) {
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (casillas[i][j] == numero) {
                    // Marcar la casilla
                    JLabel label = (JLabel) GridLayoutBoleto.getComponent(i * 5 + j);
                    if (!label.getBackground().equals(new Color(184, 44, 44))) {
                        label.setBackground(new Color(184, 44, 44));
                        label.setForeground(Color.WHITE);
                        
                        casillas[i][j]=0;
                    }
                }
            }
        }
    }

    // Limpiar el tablero
    private void limpiarTablero() {
        GridLayoutBoleto.removeAll();
        GridLayoutBoleto.repaint();
        GridLayoutBoleto.revalidate();
        repetidos.clear();
        // Resetear el arraylist y llenarlo de 0
        listaDeCasos.clear();
        for (int i = 0; i < 12; i++) {
            listaDeCasos.add(true);
        }
        
        victoriaBingo=0;
    }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Boleto;
    private javax.swing.JPanel BotonReset;
    private javax.swing.JPanel BotonTirar;
    private javax.swing.JPanel GridLayoutBoleto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelNumeroGenerado;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
