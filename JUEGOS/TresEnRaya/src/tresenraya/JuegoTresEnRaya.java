/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tresenraya;

import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.border.MatteBorder;

/**
 *
 * @author Alfonso
 */
public class JuegoTresEnRaya extends javax.swing.JFrame {

    private boolean jugar=true;
    private int[][] arrayJuego;
    private ImageIcon iconoX;
    private ImageIcon iconoO;
    
    /**
     * Creates new form JuegoTresEnRaya
     */
    public JuegoTresEnRaya() {
        initComponents();
        
        // Estilos del JFrame
        this.setSize(408, 540);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/tresenraya/images/icono.png")).getImage());
        
        // Bordes para las casillas del Grid
        Color colorBorde=new Color(153, 153, 153);
        MatteBorder bordeCelda11=BorderFactory.createMatteBorder(0, 0, 3, 3, colorBorde);
        MatteBorder bordeCelda12=BorderFactory.createMatteBorder(0, 3, 3, 3, colorBorde);
        MatteBorder bordeCelda13=BorderFactory.createMatteBorder(0, 3, 3, 0, colorBorde);
        MatteBorder bordeCelda21=BorderFactory.createMatteBorder(3, 0, 3, 3, colorBorde);
        MatteBorder bordeCelda22=BorderFactory.createMatteBorder(3, 3, 3, 3, colorBorde);
        MatteBorder bordeCelda23=BorderFactory.createMatteBorder(3, 3, 3, 0, colorBorde);
        MatteBorder bordeCelda31=BorderFactory.createMatteBorder(3, 0, 0, 3, colorBorde);
        MatteBorder bordeCelda32=BorderFactory.createMatteBorder(3, 3, 0, 3, colorBorde);
        MatteBorder bordeCelda33=BorderFactory.createMatteBorder(3, 3, 0, 0, colorBorde);
                
        jLabelCelda11.setBorder(bordeCelda11);
        jLabelCelda12.setBorder(bordeCelda12);
        jLabelCelda13.setBorder(bordeCelda13);
        jLabelCelda21.setBorder(bordeCelda21);
        jLabelCelda22.setBorder(bordeCelda22);
        jLabelCelda23.setBorder(bordeCelda23);
        jLabelCelda31.setBorder(bordeCelda31);
        jLabelCelda32.setBorder(bordeCelda32);
        jLabelCelda33.setBorder(bordeCelda33);
        
        // Array de Juego
        arrayJuego=new int[3][3];
        iconoX=new ImageIcon(getClass().getResource("/tresenraya/images/x.png"));
        iconoO=new ImageIcon(getClass().getResource("/tresenraya/images/o.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        GridCeldas = new javax.swing.JPanel();
        jLabelCelda11 = new javax.swing.JLabel();
        jLabelCelda12 = new javax.swing.JLabel();
        jLabelCelda13 = new javax.swing.JLabel();
        jLabelCelda21 = new javax.swing.JLabel();
        jLabelCelda22 = new javax.swing.JLabel();
        jLabelCelda23 = new javax.swing.JLabel();
        jLabelCelda31 = new javax.swing.JLabel();
        jLabelCelda32 = new javax.swing.JLabel();
        jLabelCelda33 = new javax.swing.JLabel();
        TextoResultado = new javax.swing.JLabel();
        BotonReset = new javax.swing.JPanel();
        LabelReset = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(335, 335));

        GridCeldas.setBackground(new java.awt.Color(204, 204, 204));
        GridCeldas.setOpaque(false);
        GridCeldas.setPreferredSize(new java.awt.Dimension(320, 320));
        GridCeldas.setLayout(new java.awt.GridLayout(3, 3));

        jLabelCelda11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda11MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda11);

        jLabelCelda12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda12MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda12);

        jLabelCelda13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda13MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda13);

        jLabelCelda21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda21MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda21);

        jLabelCelda22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda22MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda22);

        jLabelCelda23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda23MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda23);

        jLabelCelda31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda31MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda31);

        jLabelCelda32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda32MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda32);

        jLabelCelda33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCelda33.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCelda33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCelda33MouseClicked(evt);
            }
        });
        GridCeldas.add(jLabelCelda33);

        TextoResultado.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        TextoResultado.setForeground(new java.awt.Color(153, 153, 153));
        TextoResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        BotonReset.setBackground(new java.awt.Color(153, 153, 153));

        LabelReset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tresenraya/images/reset.png"))); // NOI18N
        LabelReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LabelReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LabelResetMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout BotonResetLayout = new javax.swing.GroupLayout(BotonReset);
        BotonReset.setLayout(BotonResetLayout);
        BotonResetLayout.setHorizontalGroup(
            BotonResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LabelReset, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );
        BotonResetLayout.setVerticalGroup(
            BotonResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LabelReset, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(GridCeldas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(41, 41, 41)
                            .addComponent(TextoResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(BotonReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(TextoResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GridCeldas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(BotonReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leerArray() {
        for(int i=0; i<3; i++) {
            for(int j=0; j<3; j++) {
                System.out.print(arrayJuego[i][j]+" ");
            }
            System.out.println("");
        }
        System.out.println("");
    }
    
    
    // BOTÓN RESETEAR JUEGO
    private void LabelResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LabelResetMouseClicked
        // Resetear Array
        for(int i=0; i<3; i++) {
            for(int j=0; j<3; j++) {
                arrayJuego[i][j]=0;
            }
        }
        
        // Eliminar iconos
        for(int i=0; i<9; i++) {
            JLabel label=(JLabel) GridCeldas.getComponent(i);
            label.setIcon(null);
        }
        
        TextoResultado.setText("");
        jugar=true;
    }//GEN-LAST:event_LabelResetMouseClicked

    // EVENTO PARA CADA CASILLA. AL PULSAR, SE CAMBIA EL ARRAY
    private void jLabelCelda33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda33MouseClicked
        if(arrayJuego[2][2] == 0) {
            arrayJuego[2][2]=1;
            jLabelCelda33.setIcon(iconoX);
            
            leerArray();
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            }     
        }          
    }//GEN-LAST:event_jLabelCelda33MouseClicked
    private void jLabelCelda32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda32MouseClicked
        if(arrayJuego[2][1] == 0) {
            arrayJuego[2][1]=1;
            jLabelCelda32.setIcon(iconoX);
            
            leerArray();   
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            }     
        }           
    }//GEN-LAST:event_jLabelCelda32MouseClicked
    private void jLabelCelda31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda31MouseClicked
        if(arrayJuego[2][0] == 0) {
            arrayJuego[2][0]=1;
            jLabelCelda31.setIcon(iconoX);
            
            leerArray();   
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            }     
        }                   
    }//GEN-LAST:event_jLabelCelda31MouseClicked
    private void jLabelCelda23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda23MouseClicked
        if(arrayJuego[1][2] == 0) {
            arrayJuego[1][2]=1;
            jLabelCelda23.setIcon(iconoX);
            
            leerArray();  
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            }      
        }                  
    }//GEN-LAST:event_jLabelCelda23MouseClicked
    private void jLabelCelda22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda22MouseClicked
        if(arrayJuego[1][1] == 0) {
            arrayJuego[1][1]=1;
            jLabelCelda22.setIcon(iconoX);
            
            leerArray();   
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            }     
        }           
    }//GEN-LAST:event_jLabelCelda22MouseClicked
    private void jLabelCelda21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda21MouseClicked
        if(arrayJuego[1][0] == 0) {
            arrayJuego[1][0]=1;
            jLabelCelda21.setIcon(iconoX);
            
            leerArray();  
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            }  
        }              
    }//GEN-LAST:event_jLabelCelda21MouseClicked
    private void jLabelCelda13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda13MouseClicked
        if(arrayJuego[0][2] == 0) {
            arrayJuego[0][2]=1;
            jLabelCelda13.setIcon(iconoX);
            
            leerArray();   
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            } 
        }               
    }//GEN-LAST:event_jLabelCelda13MouseClicked
    private void jLabelCelda12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda12MouseClicked
        if(arrayJuego[0][1] == 0) {
            arrayJuego[0][1]=1;
            jLabelCelda12.setIcon(iconoX);
            
            leerArray();   
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            }   
        }             
    }//GEN-LAST:event_jLabelCelda12MouseClicked
    private void jLabelCelda11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCelda11MouseClicked
        if(arrayJuego[0][0] == 0) {
            arrayJuego[0][0]=1;
            jLabelCelda11.setIcon(iconoX);
            
            leerArray();  
            mensajeVictoria();

            if(jugar == true) {
                turnoCPU();
                mensajeVictoria();
            }   
        }             
    }//GEN-LAST:event_jLabelCelda11MouseClicked

    // MÉTODO PARA VERIFICAR VICTORIA
    private int verificarVictoria() {
        // 1: jugador ganó
        // 2: CPU ganó
        // 3: empate
        
        // JUGADOR GANA
        if(arrayJuego[0][0] == 1 && arrayJuego[1][1] == 1 && arrayJuego[2][2] == 1) {
            return 1;
        } else if(arrayJuego[0][0] == 1 && arrayJuego[0][1] == 1 && arrayJuego[0][2] == 1) {
            return 1;
        } else if(arrayJuego[0][0] == 1 && arrayJuego[1][0] == 1 && arrayJuego[2][0] == 1) {
            return 1;
        } else if(arrayJuego[0][2] == 1 && arrayJuego[1][1] == 1 && arrayJuego[2][0] == 1) {
            return 1;
        } else if(arrayJuego[0][0] == 1 && arrayJuego[0][1] == 1 && arrayJuego[0][2] == 1) {
            return 1;
        } else if(arrayJuego[1][0] == 1 && arrayJuego[1][1] == 1 && arrayJuego[1][2] == 1) {
            return 1;
        } else if(arrayJuego[2][0] == 1 && arrayJuego[2][1] == 1 && arrayJuego[2][2] == 1) {
            return 1;
        } else if(arrayJuego[0][1] == 1 && arrayJuego[1][1] == 1 && arrayJuego[2][1] == 1) {
            return 1;
        } else if(arrayJuego[0][2] == 1 && arrayJuego[1][2] == 1 && arrayJuego[2][2] == 1) {
            return 1;
        }
        
        // CPU GANA
        if(arrayJuego[0][0] == 2 && arrayJuego[1][1] == 2 && arrayJuego[2][2] == 2) {
            return 2;
        } else if(arrayJuego[0][0] == 2 && arrayJuego[0][1] == 2 && arrayJuego[0][2] == 2) {
            return 2;
        } else if(arrayJuego[0][0] == 2 && arrayJuego[1][0] == 2 && arrayJuego[2][0] == 2) {
            return 2;
        } else if(arrayJuego[0][2] == 2 && arrayJuego[1][1] == 2 && arrayJuego[2][0] == 2) {
            return 2;
        } else if(arrayJuego[0][0] == 2 && arrayJuego[0][1] == 2 && arrayJuego[0][2] == 2) {
            return 2;
        } else if(arrayJuego[1][0] == 2 && arrayJuego[1][1] == 2 && arrayJuego[1][2] == 2) {
            return 2;
        } else if(arrayJuego[2][0] == 2 && arrayJuego[2][1] == 2 && arrayJuego[2][2] == 2) {
            return 2;
        } else if(arrayJuego[0][1] == 2 && arrayJuego[1][1] == 2 && arrayJuego[2][1] == 2) {
            return 2;
        } else if(arrayJuego[0][2] == 2 && arrayJuego[1][2] == 2 && arrayJuego[2][2] == 2) {
            return 2;
        }
        
        for(int i=0; i<3; i++) {
            for(int j=0; j<3; j++) {
                if(arrayJuego[i][j] == 0) {
                    return 0;
                }
            }
        }
        
        // EMPATE
        return 3;
    }
    
    private void mensajeVictoria() {
        if(verificarVictoria() == 1) {
            TextoResultado.setText("HAS GANADO!!");
            jugar=false;
            
        } else if(verificarVictoria() == 2) {
            TextoResultado.setText("HAS PERDIDO");
            jugar=false;
            
        } else if(verificarVictoria() == 3) {
            TextoResultado.setText("EMPATE");
            jugar=false;
        }
    }
    
    // TURNO DE LA CPU
    private void turnoCPU() {
        // Verificar que todavía haya alguna casilla libre
        int cont=0;
        
        for(int i=0; i<3; i++) {
            for(int j=0; j<3; j++) {
                if(arrayJuego[i][j] == 0) {
                    cont++;
                }
            }
        }
        
        // Si hay 0, es el turno del CPU        
        if(cont > 0) {
            boolean terminar=false;
            while(!terminar) {
                // Filas y columnas aleatorias
                int i=(int)(Math.random() * 3);
                int j=(int)(Math.random() * 3);
                
                if (arrayJuego[i][j] == 0) {
                    JLabel label=(JLabel) GridCeldas.getComponent(i*3+j);
                    label.setIcon(iconoO);

                    arrayJuego[i][j]=2;
                    terminar=true;
                }
            }
        }       
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JuegoTresEnRaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JuegoTresEnRaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JuegoTresEnRaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JuegoTresEnRaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JuegoTresEnRaya().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BotonReset;
    private javax.swing.JPanel GridCeldas;
    private javax.swing.JLabel LabelReset;
    private javax.swing.JLabel TextoResultado;
    private javax.swing.JLabel jLabelCelda11;
    private javax.swing.JLabel jLabelCelda12;
    private javax.swing.JLabel jLabelCelda13;
    private javax.swing.JLabel jLabelCelda21;
    private javax.swing.JLabel jLabelCelda22;
    private javax.swing.JLabel jLabelCelda23;
    private javax.swing.JLabel jLabelCelda31;
    private javax.swing.JLabel jLabelCelda32;
    private javax.swing.JLabel jLabelCelda33;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
